.header {
    /* set relative position for logo */
    position: relative;
    /* 85% of viewport height */
    height: 85vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)) ,   
        url(../img/hero-small.jpg);
    /* fix image to the body */
    background-size: cover;
    /* top of image stays at top of container at any window size */
    background-position: top;
    /* clip the image via polygon shape*/
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    // the values in polygon() doesn't matter here. This works if clip-path is supported
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
        /* clip the image via polygon shape*/
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        height: 95vh;
    }

    /* Apply Apple's Retina Display DPI value as a reference
    If resolution is >192 and min width is 600px (37.5em), then apply these
    -webkit-min-device-pixel-ratio: 2 (2x) is for Safari */
    @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
        only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
        only screen and (min-width: 125em) {
        background-image: linear-gradient(
        to right bottom, 
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)) ,   
        url(../img/hero.jpg);
    }

    @include respond(phone) {
        // fix the steepness in phone version
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    // use nesting. Here & equals .header
    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        /* 50% and 40% to parent element */
        top: 40%;
        left: 50%;
        /* shift 50% to element's top and left */
        transform: translate(-50%, -50%);
        text-align: center;
    }
}
